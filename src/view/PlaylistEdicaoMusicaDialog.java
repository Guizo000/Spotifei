/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import controller.ControllerPlaylistEdicaoMusicaDialog;
import java.util.ArrayList;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import model.Musica;
import model.Playlist;
import util.SessaoUsuario;

/**
 *
 * @author Guilherme Rocha
 */
public class PlaylistEdicaoMusicaDialog extends javax.swing.JDialog {
    ControllerPlaylistEdicaoMusicaDialog c;
    String playlistNome;
    boolean criando;
    
    public PlaylistEdicaoMusicaDialog(java.awt.Frame parent, boolean modal, String playlistNome, List<Musica> musicas, boolean criando) {
        super(parent, modal);
        initComponents();
        c = new ControllerPlaylistEdicaoMusicaDialog(this);
        this.playlistNome = playlistNome;
        this.criando = criando;
        this.setLocationRelativeTo(null);
        //Escondendo a coluna com o objeto musica da tabela de busca de musicas
        TableColumnModel tcm = tb_musicas_buscadas.getColumnModel();
        tcm.removeColumn(tcm.getColumn(2));  
        TableColumnModel tcm2 = tb_musicas_adicionadas.getColumnModel();
        tcm2.removeColumn(tcm2.getColumn(2));  
        //Adicionando as musicas que ja existem na playlist
        if(musicas != null){
            DefaultTableModel dtm = (DefaultTableModel) tb_musicas_adicionadas.getModel();
            dtm.setRowCount(0);
            for (Musica musica : musicas) {
                Object[] row = {
                    musica.getTitulo(),
                    musica.getArtista().getNome(),
                    musica
                };
                dtm.addRow(row);
            }  
        }
    }

    public JTable getTb_musicas_adicionadas() {
        return tb_musicas_adicionadas;
    }

    public void setTb_musicas_adicionadas(JTable tb_musicas_adicionadas) {
        this.tb_musicas_adicionadas = tb_musicas_adicionadas;
    }

    public JRadioButton getRb_artista() {
        return rb_artista;
    }

    public void setRb_artista(JRadioButton rb_artista) {
        this.rb_artista = rb_artista;
    }

    public JRadioButton getRb_genero() {
        return rb_genero;
    }

    public void setRb_genero(JRadioButton rb_genero) {
        this.rb_genero = rb_genero;
    }

    public JRadioButton getRb_titulo() {
        return rb_titulo;
    }

    public void setRb_titulo(JRadioButton rb_titulo) {
        this.rb_titulo = rb_titulo;
    }

    public JTextField getTxt_busca() {
        return txt_busca;
    }

    public void setTxt_busca(JTextField txt_busca) {
        this.txt_busca = txt_busca;
    }

        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btg_filtro = new javax.swing.ButtonGroup();
        txt_busca = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_musicas_adicionadas = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb_musicas_buscadas = new javax.swing.JTable();
        bt_busca = new javax.swing.JButton();
        rb_titulo = new javax.swing.JRadioButton();
        rb_artista = new javax.swing.JRadioButton();
        rb_genero = new javax.swing.JRadioButton();
        lbl_musicas_buscadas = new javax.swing.JLabel();
        lbl_musicas_adicionadas = new javax.swing.JLabel();
        bt_concluir = new javax.swing.JButton();
        lbl_filtro = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tb_musicas_adicionadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Artista", "Musica_Object_Invisivel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_musicas_adicionadas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_musicas_adicionadasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_musicas_adicionadas);
        if (tb_musicas_adicionadas.getColumnModel().getColumnCount() > 0) {
            tb_musicas_adicionadas.getColumnModel().getColumn(0).setResizable(false);
            tb_musicas_adicionadas.getColumnModel().getColumn(1).setResizable(false);
            tb_musicas_adicionadas.getColumnModel().getColumn(2).setResizable(false);
        }

        tb_musicas_buscadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Artista", "Musica_Object_Invisivel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_musicas_buscadas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_musicas_buscadasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tb_musicas_buscadas);
        if (tb_musicas_buscadas.getColumnModel().getColumnCount() > 0) {
            tb_musicas_buscadas.getColumnModel().getColumn(0).setResizable(false);
            tb_musicas_buscadas.getColumnModel().getColumn(1).setResizable(false);
            tb_musicas_buscadas.getColumnModel().getColumn(2).setResizable(false);
        }

        bt_busca.setText("P");
        bt_busca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_buscaActionPerformed(evt);
            }
        });

        btg_filtro.add(rb_titulo);
        rb_titulo.setText("Titulo");

        btg_filtro.add(rb_artista);
        rb_artista.setText("Artista");

        btg_filtro.add(rb_genero);
        rb_genero.setText("Gênero");

        lbl_musicas_buscadas.setText("Músicas Buscadas:");

        lbl_musicas_adicionadas.setText("Músicas Adicionadas:");

        bt_concluir.setText("CONCLUIR");
        bt_concluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_concluirActionPerformed(evt);
            }
        });

        lbl_filtro.setText("Procurar por:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_musicas_buscadas)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_musicas_adicionadas)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(lbl_filtro))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rb_titulo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rb_artista)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rb_genero))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_busca, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bt_busca))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(bt_concluir, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_busca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_busca))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_filtro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rb_titulo)
                    .addComponent(rb_artista)
                    .addComponent(rb_genero))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_musicas_buscadas)
                    .addComponent(lbl_musicas_adicionadas))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(bt_concluir, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_buscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_buscaActionPerformed
        List<Musica> musicas = c.buscarMusica();
        //Codigo para exibir as musicas encontradas na tabela
        DefaultTableModel dtm = (DefaultTableModel) tb_musicas_buscadas.getModel();
        dtm.setRowCount(0);
        for (Musica musica : musicas) {
            Object[] row = {
                musica.getTitulo(),
                musica.getArtista().getNome(),
                musica
            };
            dtm.addRow(row);
        }     
    }//GEN-LAST:event_bt_buscaActionPerformed

    private void tb_musicas_buscadasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_musicas_buscadasMouseClicked
        JTable source = (JTable) evt.getSource();
        int row = source.rowAtPoint( evt.getPoint() );
        
        DefaultTableModel tm1 = (DefaultTableModel) tb_musicas_buscadas.getModel();
        DefaultTableModel dtm = (DefaultTableModel) tb_musicas_adicionadas.getModel();
        
        Object[] novaRow = {
            source.getModel().getValueAt(row, 0),
            source.getModel().getValueAt(row, 1),
            source.getModel().getValueAt(row, 2)
        };
    
        boolean linhaRepetida = false;

        // Percorre todas as linhas existentes
        for (int i = 0; i < dtm.getRowCount(); i++) {
            boolean igual = true;
            // Compara cada coluna
            for (int j = 0; j < dtm.getColumnCount(); j++) {
                if (!dtm.getValueAt(i, j).equals(novaRow[j])) {
                    igual = false;
                    break;
                }
            }
            if (igual) {
                linhaRepetida = true;
                break;
            }
        }

        if (!linhaRepetida) {
            dtm.addRow(novaRow);
            c.adicionarMusicaPlaylist((Musica) source.getModel().getValueAt(row, 2), playlistNome);
        }
    }//GEN-LAST:event_tb_musicas_buscadasMouseClicked

    private void tb_musicas_adicionadasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_musicas_adicionadasMouseClicked
        JTable source = (JTable) evt.getSource();
        int row = source.rowAtPoint( evt.getPoint() );
        
        DefaultTableModel dtm = (DefaultTableModel) tb_musicas_adicionadas.getModel();
        c.removerMusicaPlaylist((Musica) source.getModel().getValueAt(row, 2), playlistNome);
        dtm.removeRow(row);  
    }//GEN-LAST:event_tb_musicas_adicionadasMouseClicked

    private void bt_concluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_concluirActionPerformed
        if(criando){
            Playlist playlist = c.buscarPlaylist(playlistNome);
        
            TableModel tm = tb_musicas_adicionadas.getModel();
            List<Musica> musicas = new ArrayList<>();
            for (int i = 0; i < tm.getRowCount(); i++) {
                musicas.add((Musica)tm.getValueAt(0, 2));
            }  
            playlist.setMusicas(musicas);
            SessaoUsuario.getUsuarioLogado().getPlaylists().add(playlist);
        }
        dispose();
    }//GEN-LAST:event_bt_concluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_busca;
    private javax.swing.JButton bt_concluir;
    private javax.swing.ButtonGroup btg_filtro;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_filtro;
    private javax.swing.JLabel lbl_musicas_adicionadas;
    private javax.swing.JLabel lbl_musicas_buscadas;
    private javax.swing.JRadioButton rb_artista;
    private javax.swing.JRadioButton rb_genero;
    private javax.swing.JRadioButton rb_titulo;
    private javax.swing.JTable tb_musicas_adicionadas;
    private javax.swing.JTable tb_musicas_buscadas;
    private javax.swing.JTextField txt_busca;
    // End of variables declaration//GEN-END:variables
}
