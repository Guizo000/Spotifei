/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.ControllerPrincipalHistorico;
import controller.ControllerPrincipalHome;
import controller.ControllerPrincipalPlaylists;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import model.Musica;
import model.Playlist;
import util.SessaoUsuario;

/**
 *
 * @author Guilherme Rocha
 */
public class PrincipalFrame extends javax.swing.JFrame {
    private ControllerPrincipalHome c;
    private ControllerPrincipalHistorico cH;
    private ControllerPrincipalPlaylists cP;
    
    public PrincipalFrame() {
        initComponents();
        //Centralizando Tela
        this.setLocationRelativeTo(null);
        c = new ControllerPrincipalHome(this);
        cH = new ControllerPrincipalHistorico(this);
        cP = new ControllerPrincipalPlaylists(this);
        //Escondendo a coluna com o objeto musica da tabela de busca de musicas
        TableColumnModel tcm = home_tb_busca.getColumnModel();
        tcm.removeColumn(tcm.getColumn(5));  
        //Escondendo a coluna com o objeto musica das tabelas de busca de musicas curtidas e descurtidas
        TableColumnModel tcm2 = historico_tb_musicas_curtidas.getColumnModel();
        tcm2.removeColumn(tcm2.getColumn(1));  
        TableColumnModel tcm3 = historico_tb_musicas_descurtidas.getColumnModel();
        tcm3.removeColumn(tcm3.getColumn(1)); 
       //Escondendo a coluna com o objeto musica da tabela de musicas da playlists
       TableColumnModel tcm4 = playlists_tb_playlists_musicas.getColumnModel();
       tcm4.removeColumn(tcm4.getColumn(1));  
    }

    public ControllerPrincipalHistorico getcH() {
        return cH;
    }

    public JTable getHistorico_tb_historico_buscas() {
        return historico_tb_historico_buscas;
    }

    public void setHistorico_tb_historico_buscas(JTable historico_tb_historico_buscas) {
        this.historico_tb_historico_buscas = historico_tb_historico_buscas;
    }

    public JTable getHistorico_tb_musicas_curtidas() {
        return historico_tb_musicas_curtidas;
    }

    public void setHistorico_tb_musicas_curtidas(JTable historico_tb_musicas_curtidas) {
        this.historico_tb_musicas_curtidas = historico_tb_musicas_curtidas;
    }

    public JTable getHistorico_tb_musicas_descurtidas() {
        return historico_tb_musicas_descurtidas;
    }

    public void setHistorico_tb_musicas_descurtidas(JTable historico_tb_musicas_descurtidas) {
        this.historico_tb_musicas_descurtidas = historico_tb_musicas_descurtidas;
    }
    
    public JTable getHome_tb_busca() {
        return home_tb_busca;
    }

    public void setHome_tb_busca(JTable tb_busca) {
        this.home_tb_busca = tb_busca;
    }

    public JRadioButton getHome_rb_busca_artista() {
        return home_rb_busca_artista;
    }

    public void setHome_rb_busca_artista(JRadioButton rb_busca_artista) {
        this.home_rb_busca_artista = rb_busca_artista;
    }

    public JRadioButton getHome_rb_busca_genero() {
        return home_rb_busca_genero;
    }

    public void setHome_rb_busca_genero(JRadioButton rb_busca_genero) {
        this.home_rb_busca_genero = rb_busca_genero;
    }

    public JRadioButton getHome_rb_busca_titulo() {
        return home_rb_busca_titulo;
    }

    public void setHome_rb_busca_titulo(JRadioButton rb_busca_titulo) {
        this.home_rb_busca_titulo = rb_busca_titulo;
    }

    public JTextField getHome_txt_busca() {
        return home_txt_busca;
    }

    public void setHome_txt_busca(JTextField txt_busca) {
        this.home_txt_busca = txt_busca;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        home_rbg_busca = new javax.swing.ButtonGroup();
        tp_principal = new javax.swing.JTabbedPane();
        panel_home = new javax.swing.JPanel();
        home_txt_busca = new javax.swing.JTextField();
        home_lbl_filtro = new javax.swing.JLabel();
        home_rb_busca_titulo = new javax.swing.JRadioButton();
        home_rb_busca_artista = new javax.swing.JRadioButton();
        home_rb_busca_genero = new javax.swing.JRadioButton();
        home_bt_busca = new javax.swing.JButton();
        home_sp_busca = new javax.swing.JScrollPane();
        home_tb_busca = new javax.swing.JTable();
        panel_playlist = new javax.swing.JPanel();
        playlists_sp_playlists = new javax.swing.JScrollPane();
        playlists_tb_playlists = new javax.swing.JTable();
        playlists_bt_criar_playlist = new javax.swing.JButton();
        playlists_sp_playlists_musicas = new javax.swing.JScrollPane();
        playlists_tb_playlists_musicas = new javax.swing.JTable();
        playlists_bt_editar_playlist = new javax.swing.JButton();
        playlists_bt_excluir_playlist = new javax.swing.JButton();
        panel_historico = new javax.swing.JPanel();
        sp_historico_musicas = new javax.swing.JScrollPane();
        historico_tb_historico_buscas = new javax.swing.JTable();
        sp_musicas_curtidas = new javax.swing.JScrollPane();
        historico_tb_musicas_curtidas = new javax.swing.JTable();
        sp_musicas_descurtidas = new javax.swing.JScrollPane();
        historico_tb_musicas_descurtidas = new javax.swing.JTable();
        historico_lbl_historico_buscas = new javax.swing.JLabel();
        historico_lbl_musicas_curtidas = new javax.swing.JLabel();
        historico_lbl_musicas_descurtidas = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tp_principal.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tp_principalStateChanged(evt);
            }
        });

        home_txt_busca.setText("Procurar Músicas");
        home_txt_busca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                home_txt_buscaFocusGained(evt);
            }
        });

        home_lbl_filtro.setText("Procurar por:");

        home_rbg_busca.add(home_rb_busca_titulo);
        home_rb_busca_titulo.setText("Titulo");

        home_rbg_busca.add(home_rb_busca_artista);
        home_rb_busca_artista.setText("Artista");

        home_rbg_busca.add(home_rb_busca_genero);
        home_rb_busca_genero.setText("Gênero");

        home_bt_busca.setText("P");
        home_bt_busca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_bt_buscaActionPerformed(evt);
            }
        });

        home_tb_busca.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titulo", "Duração", "Gênero", "Lançamento", "Artista", "Musica_Object_Invisivel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        home_tb_busca.getTableHeader().setReorderingAllowed(false);
        home_tb_busca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                home_tb_buscaMouseClicked(evt);
            }
        });
        home_sp_busca.setViewportView(home_tb_busca);
        if (home_tb_busca.getColumnModel().getColumnCount() > 0) {
            home_tb_busca.getColumnModel().getColumn(0).setResizable(false);
            home_tb_busca.getColumnModel().getColumn(1).setResizable(false);
            home_tb_busca.getColumnModel().getColumn(2).setResizable(false);
            home_tb_busca.getColumnModel().getColumn(3).setResizable(false);
            home_tb_busca.getColumnModel().getColumn(4).setResizable(false);
            home_tb_busca.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout panel_homeLayout = new javax.swing.GroupLayout(panel_home);
        panel_home.setLayout(panel_homeLayout);
        panel_homeLayout.setHorizontalGroup(
            panel_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_homeLayout.createSequentialGroup()
                .addGroup(panel_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_homeLayout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addGroup(panel_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(panel_homeLayout.createSequentialGroup()
                                    .addGap(8, 8, 8)
                                    .addComponent(home_txt_busca, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(home_bt_busca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_homeLayout.createSequentialGroup()
                                    .addComponent(home_rb_busca_titulo)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(home_rb_busca_artista)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(home_rb_busca_genero)))
                            .addGroup(panel_homeLayout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(home_lbl_filtro))))
                    .addGroup(panel_homeLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(home_sp_busca, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        panel_homeLayout.setVerticalGroup(
            panel_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_homeLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(panel_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(home_bt_busca, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(home_txt_busca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(home_lbl_filtro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(home_rb_busca_titulo)
                    .addComponent(home_rb_busca_artista)
                    .addComponent(home_rb_busca_genero))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(home_sp_busca, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        tp_principal.addTab("Home", panel_home);

        playlists_tb_playlists.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Playlists"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        playlists_tb_playlists.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playlists_tb_playlistsMouseClicked(evt);
            }
        });
        playlists_sp_playlists.setViewportView(playlists_tb_playlists);
        if (playlists_tb_playlists.getColumnModel().getColumnCount() > 0) {
            playlists_tb_playlists.getColumnModel().getColumn(0).setResizable(false);
        }

        playlists_bt_criar_playlist.setText("CRIAR ");
        playlists_bt_criar_playlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playlists_bt_criar_playlistActionPerformed(evt);
            }
        });

        playlists_tb_playlists_musicas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Músicas", "Musica_Object_Invisivel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        playlists_tb_playlists_musicas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playlists_tb_playlists_musicasMouseClicked(evt);
            }
        });
        playlists_sp_playlists_musicas.setViewportView(playlists_tb_playlists_musicas);
        if (playlists_tb_playlists_musicas.getColumnModel().getColumnCount() > 0) {
            playlists_tb_playlists_musicas.getColumnModel().getColumn(0).setResizable(false);
        }

        playlists_bt_editar_playlist.setText("EDITAR ");
        playlists_bt_editar_playlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playlists_bt_editar_playlistActionPerformed(evt);
            }
        });

        playlists_bt_excluir_playlist.setText("EXCLUIR");
        playlists_bt_excluir_playlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playlists_bt_excluir_playlistActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_playlistLayout = new javax.swing.GroupLayout(panel_playlist);
        panel_playlist.setLayout(panel_playlistLayout);
        panel_playlistLayout.setHorizontalGroup(
            panel_playlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_playlistLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(panel_playlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(playlists_bt_criar_playlist, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                    .addComponent(playlists_sp_playlists, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(50, 50, 50)
                .addComponent(playlists_sp_playlists_musicas, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(panel_playlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playlists_bt_editar_playlist, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playlists_bt_excluir_playlist, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        panel_playlistLayout.setVerticalGroup(
            panel_playlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_playlistLayout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(panel_playlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_playlistLayout.createSequentialGroup()
                        .addComponent(playlists_bt_criar_playlist, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(panel_playlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(playlists_sp_playlists_musicas, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(playlists_sp_playlists, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_playlistLayout.createSequentialGroup()
                        .addComponent(playlists_bt_editar_playlist, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(playlists_bt_excluir_playlist, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120))))
        );

        tp_principal.addTab("Playlists", panel_playlist);

        historico_tb_historico_buscas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Busca", "Filtro"
            }
        ));
        historico_tb_historico_buscas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                historico_tb_historico_buscasMouseClicked(evt);
            }
        });
        sp_historico_musicas.setViewportView(historico_tb_historico_buscas);

        historico_tb_musicas_curtidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Música", "Musica_Objetc_Invisivel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        historico_tb_musicas_curtidas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                historico_tb_musicas_curtidasMouseClicked(evt);
            }
        });
        sp_musicas_curtidas.setViewportView(historico_tb_musicas_curtidas);
        if (historico_tb_musicas_curtidas.getColumnModel().getColumnCount() > 0) {
            historico_tb_musicas_curtidas.getColumnModel().getColumn(0).setResizable(false);
        }

        historico_tb_musicas_descurtidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Música", "Musica_Objetc_Invisivel"
            }
        ));
        historico_tb_musicas_descurtidas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                historico_tb_musicas_descurtidasMouseClicked(evt);
            }
        });
        sp_musicas_descurtidas.setViewportView(historico_tb_musicas_descurtidas);

        historico_lbl_historico_buscas.setText("Histórico de Buscas (Últimas 10):");

        historico_lbl_musicas_curtidas.setText("Músicas Curtidas:");

        historico_lbl_musicas_descurtidas.setText("Músicas Descurtidas:");

        javax.swing.GroupLayout panel_historicoLayout = new javax.swing.GroupLayout(panel_historico);
        panel_historico.setLayout(panel_historicoLayout);
        panel_historicoLayout.setHorizontalGroup(
            panel_historicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_historicoLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(panel_historicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sp_historico_musicas, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(historico_lbl_historico_buscas))
                .addGap(40, 40, 40)
                .addGroup(panel_historicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sp_musicas_curtidas, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(historico_lbl_musicas_curtidas))
                .addGap(38, 38, 38)
                .addGroup(panel_historicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(historico_lbl_musicas_descurtidas)
                    .addComponent(sp_musicas_descurtidas, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        panel_historicoLayout.setVerticalGroup(
            panel_historicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_historicoLayout.createSequentialGroup()
                .addGap(0, 64, Short.MAX_VALUE)
                .addGroup(panel_historicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(historico_lbl_historico_buscas)
                    .addComponent(historico_lbl_musicas_curtidas)
                    .addComponent(historico_lbl_musicas_descurtidas))
                .addGap(18, 18, 18)
                .addGroup(panel_historicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sp_musicas_curtidas, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sp_musicas_descurtidas, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sp_historico_musicas, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        tp_principal.addTab("Historico", panel_historico);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tp_principal)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tp_principal, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //Evento no clique no botão de busca de música
    private void home_bt_buscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home_bt_buscaActionPerformed
        List<Musica> musicas = c.buscarMusica();
        //Codigo para exibir as musicas encontradas na tabela
        DefaultTableModel dtm = (DefaultTableModel) home_tb_busca.getModel();
        dtm.setRowCount(0);
        for (Musica musica : musicas) {
            Object[] row = {
                musica.getTitulo(),
                musica.getDuracaoFormatada(),
                musica.getGenero(),
                musica.getDataFormatada(),
                musica.getArtista().getNome(),
                musica
            };
            dtm.addRow(row);
        }     
    }//GEN-LAST:event_home_bt_buscaActionPerformed
    
    //Evento de foco ganho na barra de pesquisa
    private void home_txt_buscaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_home_txt_buscaFocusGained
        if(home_txt_busca.getText().equals("Procurar Músicas")){
            home_txt_busca.setText("");
        }
    }//GEN-LAST:event_home_txt_buscaFocusGained
    
   //Evento de clique nas musicas da tabela de busca
    private void home_tb_buscaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_home_tb_buscaMouseClicked
        JTable source = (JTable) evt.getSource();
        int row = source.rowAtPoint( evt.getPoint() );
        Musica musica = (Musica) source.getModel().getValueAt(row, 5);

        //Abrindo MusicaDialog com a musica clicada sendo passada como argumento
        MusicaDialog md = new MusicaDialog(this, true, musica);
        md.setVisible(true);
    }//GEN-LAST:event_home_tb_buscaMouseClicked

    private void tp_principalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tp_principalStateChanged
        if(tp_principal.getSelectedIndex() == 2){
            cH.exibirHistoricoMusicasAvaliadas("curtida");
            cH.exibirHistoricoMusicasAvaliadas("descurtida");
            cH.exibirHistoricoBuscas();
        }
        
        if(tp_principal.getSelectedIndex() == 1){
            DefaultTableModel dtm3 = (DefaultTableModel) playlists_tb_playlists_musicas.getModel();
            dtm3.setRowCount(0);
            List<Playlist> playlists = SessaoUsuario.getUsuarioLogado().getPlaylists();
            System.out.println("Tamanho Playlist ao entrar na aba: " + playlists.size());
            DefaultTableModel dtm = (DefaultTableModel) playlists_tb_playlists.getModel();
            dtm.setRowCount(0);
            for (Playlist playlist : playlists) {
                Object[] row = {
                    playlist.getNome()
                };
                dtm.addRow(row);
            }     
        }
    }//GEN-LAST:event_tp_principalStateChanged
    
    //Evento de clique nas musicas da tabela de musicas descurtidas
    private void historico_tb_musicas_descurtidasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historico_tb_musicas_descurtidasMouseClicked
        JTable source = (JTable) evt.getSource();
        int row = source.rowAtPoint( evt.getPoint() );
        Musica musica = (Musica) source.getModel().getValueAt(row, 1);

        //Abrindo MusicaDialog com a musica clicada sendo passada como argumento
        MusicaDialog md = new MusicaDialog(this, true, musica);
        md.setVisible(true);
        
        cH.exibirHistoricoMusicasAvaliadas("curtida");
        cH.exibirHistoricoMusicasAvaliadas("descurtida");
    }//GEN-LAST:event_historico_tb_musicas_descurtidasMouseClicked

    //Evento de clique nas musicas da tabela de musicas curtidas
    private void historico_tb_musicas_curtidasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historico_tb_musicas_curtidasMouseClicked
        JTable source = (JTable) evt.getSource();
        int row = source.rowAtPoint( evt.getPoint() );
        Musica musica = (Musica) source.getModel().getValueAt(row, 1);

        //Abrindo MusicaDialog com a musica clicada sendo passada como argumento
        MusicaDialog md = new MusicaDialog(this, true, musica);
        md.setVisible(true);
        
        cH.exibirHistoricoMusicasAvaliadas("curtida");
        cH.exibirHistoricoMusicasAvaliadas("descurtida");
    }//GEN-LAST:event_historico_tb_musicas_curtidasMouseClicked

    //Evento de clique nas musicas da tabela de historico de musicas buscadas
    private void historico_tb_historico_buscasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historico_tb_historico_buscasMouseClicked
        JTable source = (JTable) evt.getSource();
        int row = source.rowAtPoint( evt.getPoint() );
        String busca = (String) source.getModel().getValueAt(row, 0);
        String filtro = (String) source.getModel().getValueAt(row, 1);
        
        home_txt_busca.setText(busca);
        switch(filtro){
            case "titulo" -> home_rb_busca_titulo.setSelected(true);
            case "artista" -> home_rb_busca_artista.setSelected(true);
            case "genero" -> home_rb_busca_genero.setSelected(true);
        }
       
        tp_principal.setSelectedIndex(0);
        c.buscarMusica();
    }//GEN-LAST:event_historico_tb_historico_buscasMouseClicked

    private void playlists_bt_criar_playlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playlists_bt_criar_playlistActionPerformed
        PlaylistCriacaoDialog pcd = new PlaylistCriacaoDialog(this, true);
        pcd.setVisible(true);
        
        if(!pcd.isSucesso()){
            return;
        }
        
        String playlistNome = pcd.getTxt_playlist_nome().getText();
        DefaultTableModel dtm = (DefaultTableModel) playlists_tb_playlists.getModel();
        Object[] row = {
            playlistNome
        };
        dtm.addRow(row);   
        
        PlaylistEdicaoMusicaDialog pamd = new PlaylistEdicaoMusicaDialog(this, true, playlistNome, null, true);
        pamd.setVisible(true);
        
        DefaultTableModel dtm3 = (DefaultTableModel) playlists_tb_playlists_musicas.getModel();
        TableModel tm = pamd.getTb_musicas_adicionadas().getModel();
        dtm3.setRowCount(0);
        for (int i = 0; i < tm.getRowCount(); i++) {
            Object[] rowToAdd = {
                tm.getValueAt(i, 0),
                tm.getValueAt(i, 2)
            };
            dtm3.addRow(rowToAdd);
        }  
        
        DefaultTableModel model = (DefaultTableModel) playlists_tb_playlists.getModel();
        playlists_tb_playlists.setRowSelectionInterval(model.getRowCount() - 1, model.getRowCount() - 1);
    }//GEN-LAST:event_playlists_bt_criar_playlistActionPerformed

    private void playlists_tb_playlistsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playlists_tb_playlistsMouseClicked
        JTable source = (JTable) evt.getSource();
        int row = source.rowAtPoint( evt.getPoint() );
        String nomePlaylist = (String) source.getModel().getValueAt(row, 0);
        
        List<Musica> musicas = cP.buscarMusicasPlaylist(nomePlaylist);
        DefaultTableModel dtm = (DefaultTableModel) playlists_tb_playlists_musicas.getModel();
        dtm.setRowCount(0);
        for (Musica musica : musicas) {
            Object[] rowToAdd = {
                musica.getTitulo(),
                musica
            };
            dtm.addRow(rowToAdd);
        }    
    }//GEN-LAST:event_playlists_tb_playlistsMouseClicked

    private void playlists_bt_excluir_playlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playlists_bt_excluir_playlistActionPerformed
        int index = playlists_tb_playlists.getSelectedRow();
        if(index != -1){
            String playlistNome = (String) playlists_tb_playlists.getModel().getValueAt(index, 0);
            cP.deletarPlaylist(playlistNome);
            
            DefaultTableModel model = (DefaultTableModel) playlists_tb_playlists.getModel();
            model.removeRow(index);
            
            List<Playlist> playlists = SessaoUsuario.getUsuarioLogado().getPlaylists();
            int i = 0;
            for(Playlist playlist : playlists){
                if(playlist.getNome().equals(playlistNome)){
                    SessaoUsuario.getUsuarioLogado().getPlaylists().remove(index);
                    break;
                }
                i++;
            }
            DefaultTableModel dtm = (DefaultTableModel) playlists_tb_playlists_musicas.getModel();
            dtm.setRowCount(0);
        }else{
            JOptionPane.showMessageDialog(this, "Nenhuma playlist selecionada", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_playlists_bt_excluir_playlistActionPerformed

    private void playlists_bt_editar_playlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playlists_bt_editar_playlistActionPerformed
        int index = playlists_tb_playlists.getSelectedRow();
        if(index != -1){
            String playlistNome = (String) playlists_tb_playlists.getModel().getValueAt(index, 0);

            TableModel tm4 = playlists_tb_playlists_musicas.getModel();
            List<Musica> musicas = new ArrayList<>();
            for (int i = 0; i < tm4.getRowCount(); i++) {
                musicas.add((Musica) tm4.getValueAt(i, 1));
            }  

            PlaylistEdicaoMusicaDialog pamd = new PlaylistEdicaoMusicaDialog(this, true, playlistNome, musicas, false);
            pamd.setVisible(true);

            DefaultTableModel dtm3 = (DefaultTableModel) playlists_tb_playlists_musicas.getModel();
            TableModel tm = pamd.getTb_musicas_adicionadas().getModel();
            dtm3.setRowCount(0);
            for (int i = 0; i < tm.getRowCount(); i++) {
                Object[] rowToAdd = {
                    tm.getValueAt(i, 0),
                    tm.getValueAt(i, 2)
                };
                dtm3.addRow(rowToAdd);
            }  
        }else{
            JOptionPane.showMessageDialog(this, "Nenhuma playlist selecionada", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_playlists_bt_editar_playlistActionPerformed

    private void playlists_tb_playlists_musicasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playlists_tb_playlists_musicasMouseClicked
        JTable source = (JTable) evt.getSource();
        int row = source.rowAtPoint( evt.getPoint() );
        Musica musica = (Musica) source.getModel().getValueAt(row, 1);

        //Abrindo MusicaDialog com a musica clicada sendo passada como argumento
        MusicaDialog md = new MusicaDialog(this, true, musica);
        md.setVisible(true);
    }//GEN-LAST:event_playlists_tb_playlists_musicasMouseClicked
    
    
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel historico_lbl_historico_buscas;
    private javax.swing.JLabel historico_lbl_musicas_curtidas;
    private javax.swing.JLabel historico_lbl_musicas_descurtidas;
    private javax.swing.JTable historico_tb_historico_buscas;
    private javax.swing.JTable historico_tb_musicas_curtidas;
    private javax.swing.JTable historico_tb_musicas_descurtidas;
    private javax.swing.JButton home_bt_busca;
    private javax.swing.JLabel home_lbl_filtro;
    private javax.swing.JRadioButton home_rb_busca_artista;
    private javax.swing.JRadioButton home_rb_busca_genero;
    private javax.swing.JRadioButton home_rb_busca_titulo;
    private javax.swing.ButtonGroup home_rbg_busca;
    private javax.swing.JScrollPane home_sp_busca;
    private javax.swing.JTable home_tb_busca;
    private javax.swing.JTextField home_txt_busca;
    private javax.swing.JPanel panel_historico;
    private javax.swing.JPanel panel_home;
    private javax.swing.JPanel panel_playlist;
    private javax.swing.JButton playlists_bt_criar_playlist;
    private javax.swing.JButton playlists_bt_editar_playlist;
    private javax.swing.JButton playlists_bt_excluir_playlist;
    private javax.swing.JScrollPane playlists_sp_playlists;
    private javax.swing.JScrollPane playlists_sp_playlists_musicas;
    private javax.swing.JTable playlists_tb_playlists;
    private javax.swing.JTable playlists_tb_playlists_musicas;
    private javax.swing.JScrollPane sp_historico_musicas;
    private javax.swing.JScrollPane sp_musicas_curtidas;
    private javax.swing.JScrollPane sp_musicas_descurtidas;
    private javax.swing.JTabbedPane tp_principal;
    // End of variables declaration//GEN-END:variables

}
